what is mysql?
what is database?
create table,
insert data,
select data,
alter data,
Operators OR,AND,NOT,IN,NOT IN, LIKE, BETWEEN, NOT BETWEEN


(1)what is database?
    A database is an organized collection of structured information or data. 

(3)What is dbms?
    DBMS(Database Management Systems) are software systems used to store,retrive,and run queries on data.

(4)What is relational database?
    A relational database is collection of data items with pre-defined relationships between them,stored in the form of table,rows and columns.

(5)Mysql constraints:
    NOT NULL, UNIQUE, DEFAULT, CHECK, FORIEGN KEY, PRIMARY KEY

(5)Creat Table

create table users(
	id int unsigned,
    name varchar(100),
    email varchar(150),
    password varchar(100),
    mobile varchar(15),
    gender enum("M","D","Y"),
    dob date,
    status boolean,
    user_detail_id INT UNSIGNED,
    FOREIGN KEY (user_detail_id) REFERENCES user_details(id)
)

With Constrains:-

create table student(
	id int not null unique,
    name varchar(100) not null,
    email varchar(150) not null unique,
    age tinyint check(age >= 18),
    status boolean default 1
)

(6)Insert Data

INSERT INTO users (id, name, email, mobile, gender, dob, status)
VALUES
(2, 'Maitri', 'patelmaitri612000@gmail.com', '6353573222', 'F', '2000-01-09', 1),
(3, 'kanan', 'patelkanan@gmail.com', '8488861415', 'F', '2000-02-06', 1);

(7)Select Data

SELECT * FROM users where gender = "F";
OR 
SELECT name as "Username",email,mobile FROM users where gender = "F";

(8)Update data and Delete data:
    update student set age = 25 where id = 4; # Update data
    delete from student where id = 4; # Delete data
    delete from student where id in (4,5,6); # Delete multiple record data

(9)Operators:
    IN:
      SELECT * FROM users
        WHERE gender IN ('M','F');   
    NOT IN:
      SELECT * FROM users
        WHERE gender NOT IN('M','F');
    BETWEEN:
        SELECT * FROM students
            WHERE age BETWEEN 10 AND 20;
    NOT BETWEEN:
        SELECT * FROM students
            WHERE age NOT BETWEEN 10 AND 20;

(10)Like:
        The LIKE operator is used in a WHERE clause to search for a specified pattern in a column.

        There are two wildcards often used in conjunction with the LIKE operator:

        (1)The percent sign % represents zero, one, or multiple characters
            SELECT * FROM users
                WHERE name LIKE 'a%';  #start with "a"  
                WHERE name LIKE '%a';  #end with "a"  
                WHERE name LIKE '%a%'; #"a" in any position
                WHERE name LIKE 'a%o'; #start with "a" and ends with "o"

        (2)The underscore sign _ represents one, single character
            SELECT * FROM Customers
                WHERE city LIKE '_n%';  #"n" in the second position
                WHERE city LIKE 'n_%';  #start with "n" and at least 2 char in lenght
                WHERE city LIKE 'n__%'; #start with "n" and at least 3 char in lenght
                WHERE city LIKE 'L_nd__';

(11)ORDER BY and DISTINCT:
    ORDER BY:
    SELECT * FROM users ORDER BY name ASC # set ASC(ACCENDING) OR DESC(DECENDING)

    DISTINCT:
    SELECT DISTINCT FROM users # Remove duplicate values    
    
(12)NULL and NOT NULL:
    NULL:
        SELECT * FROM users where mobile IS NULL; # Return all records where mobile is null 
    NOT NULL:
        SELECT * FROM users where mobile IS NOT NULL; # Return all records where mobile is not null

(13)LIMIT and OFFSET:
    LIMIT:
        SELECT * FROM users LIMIT 5; #Return first 5 records
        SELECT * FROM users ORDER BY name DESC LIMIT 5; #Return last 5 records
    OFFSET:
        SELECT * FROM users LIMIT 5 OFFSET 0; #Return first 5 record with start index 0
        SELECT * FROM users LIMIT 5 OFFSET 1; #Return first 5 record with start index 1
        SELECT * FROM users ORDER BY name DESC LIMIT 5 OFFSET 1; #Return last 5 record with start index 1

(14)Aggregate Functions:
    COUNT:
        SELECT count(name) FROM users;
    SUM:
        SELECT SUM(age) FROM student;
    AVG:
        SELECT AVG(age) FROM student;
    MIN:
        SELECT MIN(age) FROM student;
    MAX:
        SELECT MAX(age) FROM student;

(15)COMMIT and ROLLBACK
    COMMIT:
        The COMMIT statement is used to permanently save the changes made during a transaction to the database.
        
    ROLLBACK:
        The ROLLBACK statement is used to undo the changes made during a transaction and discard them.  

(16)Primary key and FOREIGN key:

    create table student(
        id int not null unique,
        name varchar(100) not null
        city_id int null,
        priamry key(id),
        foriegn key(city_id) references city(cid) # city_id is refer to the table of City(id)
    )

(17)Join:
    Joins are used to combine rows from two or more tables based on related columns between them.
    INNER JOIN, LEFT JOIN, RIGHT JOIN, and FULL JOIN. 

    INNER JOIN:
        Returns only the rows that have matching values in both tables.

        SELECT columns FROM table1 INNER JOIN table2 
            ON table1.column = table2.column;

        Example:

        SELECT * FROM students INNER JOIN city 
            ON students.city_id = city.id;
        
    LEFT JOIN:
        The LEFT JOIN keyword returns all records from the left table (table1), and the matching records from the right table (table2).
        SELECT columns FROM table1 LEFT JOIN table2 
            ON table1.column = table2.column; 

        Example:
            SELECT * FROM students LEFT JOIN city
                ON students.city_id = city.id;
                
    RIGHT JOIN: 
        Returns all rows from the right table and the matched rows from the left table.
        Example:
        
        SELECT columns FROM table1 RIGHT JOIN table2 
        ON table1.column = table2.column;
        
    FULL JOIN: 
        Returns all rows from both tables, matching rows from both tables where available. 

        SELECT columns FROM table1 FULL JOIN table2 
        ON table1.column = table2.column;
 
    SELF JOIN:
        A SELF JOIN is used to join a table with itself. 

(18)What Are ‘TRUNCATE’, ‘DELETE’ And ‘DROP’ Statements In SQL?
    DELETE Statement:  
    
    DELETE removes some or all rows from a table based on the condition. 
    It can be rolled back.

    DELETE FROM Emp;

    TRUNCATE Statement:   

    TRUNCATE command is used to delete all the rows from the table and free the space containing the table.
    Truncate operation cannot be rolled back.

    TRUNCATE TABLE emp;

    DROP Statement:
    DROP command is used to remove an object from the database.
    If you drop a table, all the rows in the table are deleted and the table structure is removed from the database.
    It also cannot be retrieved back.

    DROP TABLE emp;

(19)What Are Constraints In SQL?
    CONSTRAINTS:   
        Constraints are used to specify the rules that we can apply to the type of data in a table. 

    The following are the constraints in SQL:

    NOT NULL - Restricts NULL value from being inserted into a column.
    CHECK - Verifies that all values in a field satisfy a condition.
    DEFAULT - Automatically assigns a default value if no value has been specified for the field.
    INDEX - Indexes a field providing faster retrieval of records.
    UNIQUE - Ensures unique values to be inserted into the field.
    PRIMARY - Uniquely identifies each record in a table.
    FOREIGN - Ensures referential integrity for a record in another table.

(20)What Are The Subsets Of SQL? 
Ans:
    DDL (Data Definition Language): 
        DDL defines the data structure. 
        DDL deals with database schemas and descriptions of how the data should reside in the database.
        DDL Commands: CREATE, ALTER, DROP, TRUNCATE, COMMENT, RENAME

    DML (Data Manipulation Language): 
        DML is used to store, modify, retrieve, delete and update data in a database.
        DML deals with data manipulation of existing data in the database. 
        DML Commands:  SELECT, INSERT, UPDATE, DELETE

    DCL (Data Control Language): 
        DCL controls access to the data stored in the database. 
        DCL mostly concerned with rights, permissions and other controls of the database system.
        DCL Commands:  GRANT, REVOKE

    TCL (Transaction Control Language): 
        TCL is used to deal with the transaction operations in the database. 
        TCL Commands: COMMIT, ROLLBACK, SAVEPOINT, SET TRANSACTION

(21)List Different Types Of Relationships In SQL.
Ans:
    One-to-One relationship - This can be defined as the relationship between two tables where each record in one table is associated with the maximum of one record in the other table.

    One-to-Many & Many-to-One relationships - This is the most commonly used relationship where a record in a table is associated with multiple records in the other table.

    Many-to-Many relationship- This is used in cases when multiple instances on both sides are needed for defining a relationship.

    Self-Referencing Relationships - This is used when a table needs to define a relationship with itself.

(22)What Is RDBMS? How Is It Different From DBMS?
Ans:
    RDBMS: 

        RDBMS stands for Relational Database Management System that stores data in the form of a collection of tables, and relations can be defined between the common fields of these tables.

        It also provides relational operators to manipulate the data stored into the tables.

        Examples of relational database management systems are Microsoft Access, MySQL, SQL Server, Oracle database, etc.

(23)Is A Blank Space or Zero Same As A NULL Value?
Ans:
    No. The NULL value is not the same as zero or a blank space. 
    The following points explain their main differences:

    A NULL value is a value, which is 'unavailable, unassigned, unknown or not applicable.' It would be used in the absence of any value. We can perform arithmetic operations on it. 
    On the other hand, zero is a number, and a blank space is treated as a character.

    In SQL, zero or blank space can be compared with another zero or blank space. whereas one null may not be equal to another null. null means data might not be provided or there is no data.

(24)What Is Normalization? What Are The Various Forms Of Normalization?
Ans:
    Generally, in a table, we will have a lot of redundant information which is not required, so it is better to divide this complex table into multiple smaller tables which contains only unique information.

    The process of table design to minimize the data redundancy is called normalization.

(25)What Is Denormalization?
Ans:
    Denormalization is the inverse process of normalization, where the normalized schema is converted into a schema that has redundant information. 

    Denormalization is a technique used to access the data from higher to lower normal forms of database.


(26)What is ACID property?
Ans:
    

(27)Group by ans Having clause?
Ans:
    GROUP BY is used to group rows that have the same values into summary rows, typically to apply an aggregate function such as SUM(), COUNT(), AVG(), etc., to each group.

    HAVING is used to filter the groups that are generated by the GROUP BY clause. It works similarly to the WHERE clause, but while WHERE filters individual rows, HAVING filters groups.

    Ex:
        SELECT customer_id, SUM(quantity) as total_quantity
        FROM orders
        GROUP BY customer_id
        HAVING SUM(quantity) > 100;

